server:
  port: 8080

serviceId: gateway

spring:
  data:
    redis:
      host: redis
      port: 6379
  cloud:
    gateway:
      server:
        webflux:
          routes:
            - id: xmlRoute
              uri: http://receiver:8081
              predicates:
                - Path=/receive
              filters:
                - name: RequestRateLimiter
                  args:
                    redis-rate-limiter.replenishRate: 10  # rpm 10/per minute
                    redis-rate-limiter.burstCapacity: 60
                    redis-rate-limiter.requestedTokens: 60
                - name: TraceID
                  args:
                    serviceId: ${serviceId}
                - RewritePath=/receive,/v1/api
                - name: CircuitBreaker
                  args:
                    name: backendA
                    statusCodes:
                      - 500

resilience4j.circuitbreaker:
  configs:
    default:
      sliding-window-type: time_based  # timed control type
      failure-rate-threshold: 50
      sliding-window-size: 10
      wait-duration-in-open-state: 1s
      permitted-number-of-calls-in-half-open-state: 1
      minimum-number-of-calls: 5
  instances:
    backendA:
      baseConfig: default

management:
  server:
    port: 7000
  endpoint:
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: prometheus

logging:
  level:
    root: TRACE