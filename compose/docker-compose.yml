services:
  gateway:
    image: gateway-service:1.0
    container_name: gateway
    hostname: gateway
    ports:
      - "8080:8080"
      - "7000:7000"
    networks:
      - exchange-net
    depends_on:
      - redis
      - receiver
      - zipkin

  redis:
    image: redis:8.0.3
    container_name: redis
    hostname: redis
    networks:
      - exchange-net

  rclient:
    image: redis/redisinsight:latest
    container_name: redisinsight
    hostname: rclient
    ports:
      - "5540:5540"
    depends_on:
      - redis
    networks:
      - exchange-net

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    hostname: zipkin
    ports:
      - "9411:9411"
    networks:
      - exchange-net

  minio:
    image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
    container_name: minio
    hostname: minio
    ports:
      - "9900:9000"
      - "9901:9001"
    networks:
      - exchange-net
    volumes:
      - ./minio/data:/data
    environment:
      MINIO_ROOT_USER: accessKey
      MINIO_ROOT_PASSWORD: secretKey
    command: [ "server", "--console-address", ":9001", "/data" ]
  createbuckets:
    image: quay.io/minio/mc:RELEASE.2025-03-12T17-29-24Z
    depends_on:
      - minio
    restart: on-failure
    networks:
      - exchange-net
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set dockerminio http://minio:9000 accessKey secretKey;
      /usr/bin/mc mb dockerminio/bucket;
      exit 0;
      "

  blobstorage:
    image: blobstorage-service:1.0
    container_name: blobstorage
    hostname: gateway
    ports:
      - "9090:9090"
      - "7001:7000"
    networks:
      - exchange-net
    depends_on:
      - minio
      - zipkin

  receiver:
    image: boxboat/hello-world-webapp
    container_name: receiver
    hostname: receiver
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
    networks:
      - exchange-net

networks:
  exchange-net:
    driver: bridge

