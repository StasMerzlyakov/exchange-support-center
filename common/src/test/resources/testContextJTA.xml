<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd

                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
    <!-- Тестовый контекс -->

    <context:property-placeholder location="classpath:test.properties"
                                  ignore-resource-not-found="true" properties-ref="appProperties"/>

    <!-- Конфигурация для работсы с БД -->
    <import resource="classpath:dataSource.h2.jta.xml"/>

    <context:annotation-config/>

    <!-- Конфигурация JTA менеджера транзакций -->
    <bean id="btmConfig" factory-method="getConfiguration" class="bitronix.tm.TransactionManagerServices">
        <property name="serverId" value="transport-btm"/>
        <property name="currentNodeOnlyRecovery" value="true"/>
        <property name="backgroundRecoveryIntervalSeconds" value="60"/>
        <property name="gracefulShutdownInterval" value="60"/>
        <property name="defaultTransactionTimeout" value="600"/>
        <property name="jndiUserTransactionName" value="java:comp/UserTransaction"/>
    </bean>

    <bean id="BitronixTransactionManager" factory-method="getTransactionManager" class="bitronix.tm.TransactionManagerServices"
          depends-on="btmConfig" destroy-method="shutdown"/>

    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="BitronixTransactionManager"/>
        <property name="userTransaction" ref="BitronixTransactionManager"/>
        <property name="transactionManagerName" value="java:comp/TransactionManager"/>
    </bean>

    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <!-- Для проверки методов нужно что бы они выполнялись в одной транзакции с тестом, поэтому обрабатывать @Transaction в
      бинах не нужно -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

    <!-- Конфигурация JPA -->

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="dataSource">
        <property name="persistenceUnitName" value="transport-persistence"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.jdbc.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.transaction.jta.platform">org.hibernate.service.jta.platform.internal.BitronixJtaPlatform</prop>
                <prop key="hibernate.current_session_context_class">jta</prop>
                <prop key="hibernate.show_sql">false</prop>

                <prop key="hibernate.connection.release_mode">after_statement</prop>
                <prop key="hibernate.transaction.auto_close_session">true</prop>
                <prop key="hibernate.generate_statistics">true</prop>

                <prop key="cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
            </props>
        </property>
    </bean>

    <!-- условие при котором удаляются все пробелы -->
    <bean id="conditionRemoveAllSpace" class="ru.pvdnp.util.jpa.AutoRemoveSpaceCondition">

        <constructor-arg name="entityTypeList">
            <list>
                <value>ru.pvdnp.util.testentity.Address</value>
            </list>
        </constructor-arg>
        <constructor-arg name="propertyNameList">
            <list>
                <value>getSeries</value>
                <value>getNumber</value>
                <value>getPostIndex</value>
            </list>
        </constructor-arg>
        <!-- заменяем все пробелы -->
        <constructor-arg name="regex">
            <value>\s</value>
        </constructor-arg>
        <!-- на пустую строку -->
        <constructor-arg name="replacement">
            <value></value>
        </constructor-arg>
    </bean>

    <!-- условие при котором удаляются пробелы только находящиеся рядом с символом дефиса  -->
    <bean id="conditionRemoveSpaceInName" class="ru.pvdnp.util.jpa.AutoRemoveSpaceCondition">

        <constructor-arg name="entityTypeList">
            <list>
                <value>ru.pvdnp.util.testentity.Anket</value>
            </list>
        </constructor-arg>
        <constructor-arg name="propertyNameList">
            <list>
                <value>getFirstName</value>
                <value>getFirstNameLat</value>
                <value>getLastName</value>
                <value>getLastNameLat</value>
                <value>getPatronymic</value>
            </list>
        </constructor-arg>
        <constructor-arg name="regex">
            <value>\s*-\s*</value>
        </constructor-arg>
        <constructor-arg name="replacement">
            <value>-</value>
        </constructor-arg>
    </bean>

    <!-- условие при котором удаляются пробелы только находящиеся рядом с символом апострофа  -->
    <bean id="conditionRemoveSpaceInName1" class="ru.pvdnp.util.jpa.AutoRemoveSpaceCondition">

        <constructor-arg name="entityTypeList">
            <list>
                <value>ru.pvdnp.util.testentity.Anket</value>
            </list>
        </constructor-arg>
        <constructor-arg name="propertyNameList">
            <list>
                <value>getFirstName</value>
                <value>getFirstNameLat</value>
                <value>getLastName</value>
                <value>getLastNameLat</value>
                <value>getPatronymic</value>
            </list>
        </constructor-arg>
        <constructor-arg name="regex">
            <value>\s*'\s*</value>
        </constructor-arg>
        <constructor-arg name="replacement">
            <value>'</value>
        </constructor-arg>
    </bean>

    <!-- условие при котором множественные пробелы подряд заменяются на один пробел -->
    <bean id="conditionRemoveMultiSpace" class="ru.pvdnp.util.jpa.AutoRemoveSpaceCondition">

        <constructor-arg name="entityTypeList">
            <list>
                <value>java.lang.Object</value>
            </list>
        </constructor-arg>
        <constructor-arg name="propertyNameList">
            <list>
                <value>*</value>
            </list>
        </constructor-arg>
        <constructor-arg name="regex">
            <value>\s{2,}</value>
        </constructor-arg>
        <constructor-arg name="replacement">
            <value></value>
        </constructor-arg>
    </bean>

    <!-- Бин, удаляющий лишние пробелы -->
    <bean id="autoRemoveSpace" class="ru.pvdnp.util.jpa.AutoRemoveSpace">

        <property name="additionalConditions">
            <list>
                <ref bean="conditionRemoveAllSpace"/>
                <ref bean="conditionRemoveMultiSpace"/>
                <ref bean="conditionRemoveSpaceInName"/>
                <ref bean="conditionRemoveSpaceInName1"/>
            </list>
        </property>
    </bean>
</beans>
