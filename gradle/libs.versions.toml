[versions]
sonarlint = "4.3.4"
spotless = "6.25.0"
mijmh = "0.7.2"
lombok-plugin = "8.14"
project-lombok = "1.18.38"
spring-boot-bom = "3.5.0"
spring-boot = "3.5.0"
spring-cloud-bom = "2025.0.0"
junit = "5.12.2"
java-uuid-generator = "5.1.0"
spring-cloud-contract-wiremock = "4.3.0"
testcontainers = "1.21.0"
redis-testcontainers = "1.6.4"
slf4j-api = "2.0.17"
slf4j-simple = "2.0.17"
opentelemetry-instrumentation-bom = "2.15.0"

jaxb-api = "2.3.0"
jvnet-jaxb2-basics = "1.1.0"
jakarta-bind-api = "4.0.2"
bjornvester-xjc = "1.8.2"
jaxb-runtime = "4.0.5"
murmur3 = "0.4.3"
minio = "8.5.17"
openapi-generator = "7.12.0"

jackson = "2.19.2"
guava = "32.1.3-jre"
annotation-api = "1.3.2"
findbugs-jsr305 = "3.0.2"
assertj-core = "3.27.3"
mockito-core = "5.18.0"
reactor-core = "3.7.6"

[plugins]
freefair-lombok = { id = "io.freefair.lombok", version.ref = "lombok-plugin" }
sonarlint = { id = "name.remal.sonarlint", version.ref = "sonarlint" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
mijmh = { id = "me.champeau.jmh", version.ref = "mijmh" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
bjornvester-xjc = { id = "com.github.bjornvester.xjc", version.ref = "bjornvester-xjc" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openapi-generator" }
# BASE
#jvm-compiler = "21"
#jvm-language = "21"

[libraries]
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
opentelemetry-instrumentation-bom = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom", version.ref = "opentelemetry-instrumentation-bom" }
testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot-bom" }
spring-cloud-dependencies = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "spring-cloud-bom" }
jaxb-api = { module = "javax.xml.bind:jaxb-api", version.ref = "jaxb-api" }
jvnet-jaxb2-basics = { module = "org.jvnet.jaxb2_commons:jaxb2-basics-annotate", version.ref = "jvnet-jaxb2-basics" }
jakarta-bind-api = { module = "jakarta.xml.bind:jakarta.xml.bind-api", version.ref = "jakarta-bind-api" }
starter-webflux = { group = "org.springframework.boot", name = "spring-boot-starter-webflux" }
starter-redis-reactive = { group = "org.springframework.boot", name = "spring-boot-starter-data-redis-reactive" }
cloud-starter-webflux = { group = "org.springframework.cloud", name = "spring-cloud-starter-gateway-server-webflux" }
starter-actuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator" }
starter-aop = { group = "org.springframework.boot", name = "spring-boot-starter-aop" }
starter-validation = { group = "org.springframework.boot", name = "spring-boot-starter-validation" }
junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito-core" }
junit-platform-launcher = { group = "org.junit.platform", name = "junit-platform-launcher" }
minio = { module = "io.minio:minio", version.ref = "minio" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus" }
micrometer-tracing-bridge-otel = { module = "io.micrometer:micrometer-tracing-bridge-otel" }
opentelemetry-exporter-zipkin = { module = "io.opentelemetry:opentelemetry-exporter-zipkin" }
reactor-test = { module = "io.projectreactor:reactor-test", version.ref = "reactor-core" }
reactor-core = { module = "io.projectreactor:reactor-core", version.ref = "reactor-core" }

spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
opentelemetry-instrumentation-annotations = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations" }
spring-cloud-starter-circuitbreaker-reactor-resilience4j = { module = "org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j" }

project-lombok = { module = "org.projectlombok:lombok", version.ref = "project-lombok" }
java-uuid-generator = { module = "com.fasterxml.uuid:java-uuid-generator", version.ref = "java-uuid-generator" }
spring-cloud-contract-wiremock = { module = "org.springframework.cloud:spring-cloud-contract-wiremock", version.ref = "spring-cloud-contract-wiremock" }
redis-testcontainers = { module = "com.redis.testcontainers:testcontainers-redis", version.ref = "redis-testcontainers" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j-api" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j-simple" }
murmur3 = { module = "com.github.eprst:murmur3", version.ref = "murmur3" }

jaxb-runtime = { module = "org.glassfish.jaxb:jaxb-runtime", version.ref = "jaxb-runtime" }
findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "findbugs-jsr305" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
jackson-bom = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "jackson" }
jackson-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
annotation-api = { module = "javax.annotation:javax.annotation-api", version.ref = "annotation-api" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj-core" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito-core" }

jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-datatype-guava = { module = "com.fasterxml.jackson.datatype:jackson-datatype-guava", version.ref = "jackson" }
jackson-datatype-jdk8 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8", version.ref = "jackson" }
jackson-module-parameter-names = { module = "com.fasterxml.jackson.module:jackson-module-parameter-names", version.ref = "jackson" }




